{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/components/games/TetrisGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Play, Pause, RotateCcw, Trophy, RotateCw } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TetrisGame = ({\n  onScoreUpdate\n}) => {\n  _s();\n  const GRID_WIDTH = 10;\n  const GRID_HEIGHT = 20;\n  const INITIAL_SPEED = 500;\n  const TETROMINOES = {\n    I: {\n      shape: [[1, 1, 1, 1]],\n      color: '#00FFFF'\n    },\n    O: {\n      shape: [[1, 1], [1, 1]],\n      color: '#FFFF00'\n    },\n    T: {\n      shape: [[0, 1, 0], [1, 1, 1]],\n      color: '#800080'\n    },\n    S: {\n      shape: [[0, 1, 1], [1, 1, 0]],\n      color: '#00FF00'\n    },\n    Z: {\n      shape: [[1, 1, 0], [0, 1, 1]],\n      color: '#FF0000'\n    },\n    J: {\n      shape: [[1, 0, 0], [1, 1, 1]],\n      color: '#0000FF'\n    },\n    L: {\n      shape: [[0, 0, 1], [1, 1, 1]],\n      color: '#FFA500'\n    }\n  };\n  const [grid, setGrid] = useState(() => Array(GRID_HEIGHT).fill().map(() => Array(GRID_WIDTH).fill(0)));\n  const [currentPiece, setCurrentPiece] = useState(null);\n  const [gameRunning, setGameRunning] = useState(false);\n  const [score, setScore] = useState(0);\n  const [lines, setLines] = useState(0);\n  const [level, setLevel] = useState(1);\n  const [gameOver, setGameOver] = useState(false);\n  const [speed, setSpeed] = useState(INITIAL_SPEED);\n  const [highScore, setHighScore] = useState(parseInt(localStorage.getItem('tetris-high-score') || '0'));\n  const getRandomPiece = useCallback(() => {\n    const keys = Object.keys(TETROMINOES);\n    const randomKey = keys[Math.floor(Math.random() * keys.length)];\n    return {\n      type: randomKey,\n      shape: TETROMINOES[randomKey].shape,\n      color: TETROMINOES[randomKey].color,\n      x: Math.floor(GRID_WIDTH / 2) - 1,\n      y: 0\n    };\n  }, []);\n  const rotatePiece = useCallback(piece => {\n    const rotated = piece.shape[0].map((_, index) => piece.shape.map(row => row[index]).reverse());\n    return {\n      ...piece,\n      shape: rotated\n    };\n  }, []);\n  const isValidMove = useCallback((piece, newX, newY, newShape = null) => {\n    const shape = newShape || piece.shape;\n    for (let y = 0; y < shape.length; y++) {\n      for (let x = 0; x < shape[y].length; x++) {\n        if (shape[y][x]) {\n          const nextX = newX + x;\n          const nextY = newY + y;\n          if (nextX < 0 || nextX >= GRID_WIDTH || nextY >= GRID_HEIGHT) {\n            return false;\n          }\n          if (nextY >= 0 && grid[nextY][nextX]) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }, [grid]);\n  const clearLines = useCallback(() => {\n    let linesCleared = 0;\n    const newGrid = grid.filter(row => {\n      if (row.every(cell => cell !== 0)) {\n        linesCleared++;\n        return false;\n      }\n      return true;\n    });\n    while (newGrid.length < GRID_HEIGHT) {\n      newGrid.unshift(Array(GRID_WIDTH).fill(0));\n    }\n    if (linesCleared > 0) {\n      setLines(prev => prev + linesCleared);\n      setScore(prev => prev + linesCleared * 100 * level);\n      setLevel(prev => Math.floor((lines + linesCleared) / 10) + 1);\n    }\n    return newGrid;\n  }, [grid, level, lines]);\n  const placePiece = useCallback(() => {\n    if (!currentPiece) return;\n    const newGrid = [...grid];\n    currentPiece.shape.forEach((row, y) => {\n      row.forEach((cell, x) => {\n        if (cell) {\n          const gridY = currentPiece.y + y;\n          const gridX = currentPiece.x + x;\n          if (gridY >= 0) {\n            newGrid[gridY][gridX] = currentPiece.color;\n          }\n        }\n      });\n    });\n    setGrid(newGrid);\n    setCurrentPiece(getRandomPiece());\n  }, [currentPiece, grid, getRandomPiece]);\n  const movePiece = useCallback((dx, dy) => {\n    if (!currentPiece || !gameRunning) return;\n    const newX = currentPiece.x + dx;\n    const newY = currentPiece.y + dy;\n    if (isValidMove(currentPiece, newX, newY)) {\n      setCurrentPiece(prev => ({\n        ...prev,\n        x: newX,\n        y: newY\n      }));\n    } else if (dy > 0) {\n      placePiece();\n    }\n  }, [currentPiece, gameRunning, isValidMove, placePiece]);\n  const rotatePieceHandler = useCallback(() => {\n    if (!currentPiece || !gameRunning) return;\n    const rotated = rotatePiece(currentPiece);\n    if (isValidMove(currentPiece, currentPiece.x, currentPiece.y, rotated.shape)) {\n      setCurrentPiece(rotated);\n    }\n  }, [currentPiece, gameRunning, rotatePiece, isValidMove]);\n\n  // Game loop\n  useEffect(() => {\n    if (!gameRunning || gameOver) return;\n    const gameLoop = setInterval(() => {\n      movePiece(0, 1);\n    }, speed);\n    return () => clearInterval(gameLoop);\n  }, [gameRunning, gameOver, speed, movePiece]);\n\n  // Clear lines effect\n  useEffect(() => {\n    if (!gameRunning) return;\n    const newGrid = clearLines();\n    if (newGrid !== grid) {\n      setGrid(newGrid);\n    }\n  }, [grid, clearLines, gameRunning]);\n\n  // Speed adjustment\n  useEffect(() => {\n    setSpeed(Math.max(INITIAL_SPEED - (level - 1) * 50, 50));\n  }, [level]);\n\n  // Game over check\n  useEffect(() => {\n    if (currentPiece && !isValidMove(currentPiece, currentPiece.x, currentPiece.y)) {\n      setGameOver(true);\n      setGameRunning(false);\n    }\n  }, [currentPiece, isValidMove]);\n\n  // Keyboard controls\n  useEffect(() => {\n    const handleKeyPress = e => {\n      if (!gameRunning) return;\n      switch (e.key) {\n        case 'ArrowLeft':\n          e.preventDefault();\n          movePiece(-1, 0);\n          break;\n        case 'ArrowRight':\n          e.preventDefault();\n          movePiece(1, 0);\n          break;\n        case 'ArrowDown':\n          e.preventDefault();\n          movePiece(0, 1);\n          break;\n        case 'ArrowUp':\n        case ' ':\n          e.preventDefault();\n          rotatePieceHandler();\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [gameRunning, movePiece, rotatePieceHandler]);\n\n  // Update high score\n  useEffect(() => {\n    if (score > highScore) {\n      setHighScore(score);\n      localStorage.setItem('tetris-high-score', score.toString());\n      onScoreUpdate === null || onScoreUpdate === void 0 ? void 0 : onScoreUpdate({\n        game: 'tetris',\n        score,\n        isHighScore: true\n      });\n    }\n  }, [score, highScore, onScoreUpdate]);\n  const renderGrid = () => {\n    const displayGrid = grid.map(row => [...row]);\n\n    // Add current piece to display\n    if (currentPiece) {\n      currentPiece.shape.forEach((row, y) => {\n        row.forEach((cell, x) => {\n          if (cell && currentPiece.y + y >= 0) {\n            displayGrid[currentPiece.y + y][currentPiece.x + x] = currentPiece.color;\n          }\n        });\n      });\n    }\n    return displayGrid;\n  };\n  const startGame = () => {\n    setGrid(Array(GRID_HEIGHT).fill().map(() => Array(GRID_WIDTH).fill(0)));\n    setCurrentPiece(getRandomPiece());\n    setScore(0);\n    setLines(0);\n    setLevel(1);\n    setGameOver(false);\n    setGameRunning(true);\n    setSpeed(INITIAL_SPEED);\n  };\n  const pauseGame = () => {\n    setGameRunning(!gameRunning);\n  };\n  const resetGame = () => {\n    setGameRunning(false);\n    setGameOver(false);\n    setGrid(Array(GRID_HEIGHT).fill().map(() => Array(GRID_WIDTH).fill(0)));\n    setCurrentPiece(null);\n    setScore(0);\n    setLines(0);\n    setLevel(1);\n    setSpeed(INITIAL_SPEED);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center space-y-4 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 gap-4 w-full max-w-xs text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xl font-bold text-green-400\",\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-400\",\n          children: \"Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xl font-bold text-yellow-400 flex items-center justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(Trophy, {\n            size: 16,\n            className: \"mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), highScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-400\",\n          children: \"Record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xl font-bold text-blue-400\",\n          children: lines\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-400\",\n          children: \"Lignes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xl font-bold text-purple-400\",\n          children: level\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-400\",\n          children: \"Niveau\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative bg-gray-800 border border-gray-600 rounded-lg p-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid gap-px bg-gray-700\",\n        style: {\n          gridTemplateColumns: `repeat(${GRID_WIDTH}, 15px)`,\n          gridTemplateRows: `repeat(${GRID_HEIGHT}, 15px)`\n        },\n        children: renderGrid().map((row, y) => row.map((cell, x) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4 h-4 border border-gray-600\",\n          style: {\n            backgroundColor: cell || '#111'\n          }\n        }, `${y}-${x}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 bg-black/80 flex items-center justify-center rounded-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-bold text-red-400\",\n            children: \"Game Over\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-lg text-white\",\n            children: [\"Score: \", score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-blue-400\",\n            children: [\"Lignes: \", lines]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this), score === highScore && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-yellow-400\",\n            children: \"\\uD83C\\uDF89 Nouveau record !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-2\",\n      children: [!gameRunning && !gameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startGame,\n        className: \"flex items-center space-x-2 px-4 py-2 bg-green-500 rounded-lg hover:bg-green-600 transition-colors\",\n        children: [/*#__PURE__*/_jsxDEV(Play, {\n          size: 16,\n          className: \"text-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-white text-sm\",\n          children: \"Jouer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this), gameRunning && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: pauseGame,\n        className: \"flex items-center space-x-2 px-4 py-2 bg-yellow-500 rounded-lg hover:bg-yellow-600 transition-colors\",\n        children: [/*#__PURE__*/_jsxDEV(Pause, {\n          size: 16,\n          className: \"text-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-white text-sm\",\n          children: \"Pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startGame,\n        className: \"flex items-center space-x-2 px-4 py-2 bg-blue-500 rounded-lg hover:bg-blue-600 transition-colors\",\n        children: [/*#__PURE__*/_jsxDEV(Play, {\n          size: 16,\n          className: \"text-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-white text-sm\",\n          children: \"Rejouer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        className: \"flex items-center space-x-2 px-4 py-2 bg-gray-600 rounded-lg hover:bg-gray-700 transition-colors\",\n        children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n          size: 16,\n          className: \"text-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-white text-sm\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), gameRunning && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: rotatePieceHandler,\n        className: \"flex items-center space-x-2 px-4 py-2 bg-purple-500 rounded-lg hover:bg-purple-600 transition-colors\",\n        children: [/*#__PURE__*/_jsxDEV(RotateCw, {\n          size: 16,\n          className: \"text-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-white text-sm\",\n          children: \"Rotation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-gray-400 text-xs space-y-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u2191 ou Espace: Rotation | \\u2190 \\u2192: D\\xE9placer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u2193: Descendre plus vite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n};\n_s(TetrisGame, \"FRU61KDptp3wcxvZPB2utHIx/7c=\");\n_c = TetrisGame;\nexport default TetrisGame;\nvar _c;\n$RefreshReg$(_c, \"TetrisGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Play","Pause","RotateCcw","Trophy","RotateCw","jsxDEV","_jsxDEV","TetrisGame","onScoreUpdate","_s","GRID_WIDTH","GRID_HEIGHT","INITIAL_SPEED","TETROMINOES","I","shape","color","O","T","S","Z","J","L","grid","setGrid","Array","fill","map","currentPiece","setCurrentPiece","gameRunning","setGameRunning","score","setScore","lines","setLines","level","setLevel","gameOver","setGameOver","speed","setSpeed","highScore","setHighScore","parseInt","localStorage","getItem","getRandomPiece","keys","Object","randomKey","Math","floor","random","length","type","x","y","rotatePiece","piece","rotated","_","index","row","reverse","isValidMove","newX","newY","newShape","nextX","nextY","clearLines","linesCleared","newGrid","filter","every","cell","unshift","prev","placePiece","forEach","gridY","gridX","movePiece","dx","dy","rotatePieceHandler","gameLoop","setInterval","clearInterval","max","handleKeyPress","e","key","preventDefault","window","addEventListener","removeEventListener","setItem","toString","game","isHighScore","renderGrid","displayGrid","startGame","pauseGame","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","size","style","gridTemplateColumns","gridTemplateRows","backgroundColor","onClick","_c","$RefreshReg$"],"sources":["/app/frontend/src/components/games/TetrisGame.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Play, Pause, RotateCcw, Trophy, RotateCw } from 'lucide-react';\n\nconst TetrisGame = ({ onScoreUpdate }) => {\n  const GRID_WIDTH = 10;\n  const GRID_HEIGHT = 20;\n  const INITIAL_SPEED = 500;\n  \n  const TETROMINOES = {\n    I: {\n      shape: [[1, 1, 1, 1]],\n      color: '#00FFFF'\n    },\n    O: {\n      shape: [[1, 1], [1, 1]],\n      color: '#FFFF00'\n    },\n    T: {\n      shape: [[0, 1, 0], [1, 1, 1]],\n      color: '#800080'\n    },\n    S: {\n      shape: [[0, 1, 1], [1, 1, 0]],\n      color: '#00FF00'\n    },\n    Z: {\n      shape: [[1, 1, 0], [0, 1, 1]],\n      color: '#FF0000'\n    },\n    J: {\n      shape: [[1, 0, 0], [1, 1, 1]],\n      color: '#0000FF'\n    },\n    L: {\n      shape: [[0, 0, 1], [1, 1, 1]],\n      color: '#FFA500'\n    }\n  };\n\n  const [grid, setGrid] = useState(() => \n    Array(GRID_HEIGHT).fill().map(() => Array(GRID_WIDTH).fill(0))\n  );\n  const [currentPiece, setCurrentPiece] = useState(null);\n  const [gameRunning, setGameRunning] = useState(false);\n  const [score, setScore] = useState(0);\n  const [lines, setLines] = useState(0);\n  const [level, setLevel] = useState(1);\n  const [gameOver, setGameOver] = useState(false);\n  const [speed, setSpeed] = useState(INITIAL_SPEED);\n  const [highScore, setHighScore] = useState(\n    parseInt(localStorage.getItem('tetris-high-score') || '0')\n  );\n\n  const getRandomPiece = useCallback(() => {\n    const keys = Object.keys(TETROMINOES);\n    const randomKey = keys[Math.floor(Math.random() * keys.length)];\n    return {\n      type: randomKey,\n      shape: TETROMINOES[randomKey].shape,\n      color: TETROMINOES[randomKey].color,\n      x: Math.floor(GRID_WIDTH / 2) - 1,\n      y: 0\n    };\n  }, []);\n\n  const rotatePiece = useCallback((piece) => {\n    const rotated = piece.shape[0].map((_, index) =>\n      piece.shape.map(row => row[index]).reverse()\n    );\n    return { ...piece, shape: rotated };\n  }, []);\n\n  const isValidMove = useCallback((piece, newX, newY, newShape = null) => {\n    const shape = newShape || piece.shape;\n    \n    for (let y = 0; y < shape.length; y++) {\n      for (let x = 0; x < shape[y].length; x++) {\n        if (shape[y][x]) {\n          const nextX = newX + x;\n          const nextY = newY + y;\n          \n          if (nextX < 0 || nextX >= GRID_WIDTH || nextY >= GRID_HEIGHT) {\n            return false;\n          }\n          \n          if (nextY >= 0 && grid[nextY][nextX]) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }, [grid]);\n\n  const clearLines = useCallback(() => {\n    let linesCleared = 0;\n    const newGrid = grid.filter(row => {\n      if (row.every(cell => cell !== 0)) {\n        linesCleared++;\n        return false;\n      }\n      return true;\n    });\n    \n    while (newGrid.length < GRID_HEIGHT) {\n      newGrid.unshift(Array(GRID_WIDTH).fill(0));\n    }\n    \n    if (linesCleared > 0) {\n      setLines(prev => prev + linesCleared);\n      setScore(prev => prev + linesCleared * 100 * level);\n      setLevel(prev => Math.floor((lines + linesCleared) / 10) + 1);\n    }\n    \n    return newGrid;\n  }, [grid, level, lines]);\n\n  const placePiece = useCallback(() => {\n    if (!currentPiece) return;\n    \n    const newGrid = [...grid];\n    currentPiece.shape.forEach((row, y) => {\n      row.forEach((cell, x) => {\n        if (cell) {\n          const gridY = currentPiece.y + y;\n          const gridX = currentPiece.x + x;\n          if (gridY >= 0) {\n            newGrid[gridY][gridX] = currentPiece.color;\n          }\n        }\n      });\n    });\n    \n    setGrid(newGrid);\n    setCurrentPiece(getRandomPiece());\n  }, [currentPiece, grid, getRandomPiece]);\n\n  const movePiece = useCallback((dx, dy) => {\n    if (!currentPiece || !gameRunning) return;\n    \n    const newX = currentPiece.x + dx;\n    const newY = currentPiece.y + dy;\n    \n    if (isValidMove(currentPiece, newX, newY)) {\n      setCurrentPiece(prev => ({ ...prev, x: newX, y: newY }));\n    } else if (dy > 0) {\n      placePiece();\n    }\n  }, [currentPiece, gameRunning, isValidMove, placePiece]);\n\n  const rotatePieceHandler = useCallback(() => {\n    if (!currentPiece || !gameRunning) return;\n    \n    const rotated = rotatePiece(currentPiece);\n    if (isValidMove(currentPiece, currentPiece.x, currentPiece.y, rotated.shape)) {\n      setCurrentPiece(rotated);\n    }\n  }, [currentPiece, gameRunning, rotatePiece, isValidMove]);\n\n  // Game loop\n  useEffect(() => {\n    if (!gameRunning || gameOver) return;\n    \n    const gameLoop = setInterval(() => {\n      movePiece(0, 1);\n    }, speed);\n    \n    return () => clearInterval(gameLoop);\n  }, [gameRunning, gameOver, speed, movePiece]);\n\n  // Clear lines effect\n  useEffect(() => {\n    if (!gameRunning) return;\n    \n    const newGrid = clearLines();\n    if (newGrid !== grid) {\n      setGrid(newGrid);\n    }\n  }, [grid, clearLines, gameRunning]);\n\n  // Speed adjustment\n  useEffect(() => {\n    setSpeed(Math.max(INITIAL_SPEED - (level - 1) * 50, 50));\n  }, [level]);\n\n  // Game over check\n  useEffect(() => {\n    if (currentPiece && !isValidMove(currentPiece, currentPiece.x, currentPiece.y)) {\n      setGameOver(true);\n      setGameRunning(false);\n    }\n  }, [currentPiece, isValidMove]);\n\n  // Keyboard controls\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      if (!gameRunning) return;\n      \n      switch (e.key) {\n        case 'ArrowLeft':\n          e.preventDefault();\n          movePiece(-1, 0);\n          break;\n        case 'ArrowRight':\n          e.preventDefault();\n          movePiece(1, 0);\n          break;\n        case 'ArrowDown':\n          e.preventDefault();\n          movePiece(0, 1);\n          break;\n        case 'ArrowUp':\n        case ' ':\n          e.preventDefault();\n          rotatePieceHandler();\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [gameRunning, movePiece, rotatePieceHandler]);\n\n  // Update high score\n  useEffect(() => {\n    if (score > highScore) {\n      setHighScore(score);\n      localStorage.setItem('tetris-high-score', score.toString());\n      onScoreUpdate?.({ game: 'tetris', score, isHighScore: true });\n    }\n  }, [score, highScore, onScoreUpdate]);\n\n  const renderGrid = () => {\n    const displayGrid = grid.map(row => [...row]);\n    \n    // Add current piece to display\n    if (currentPiece) {\n      currentPiece.shape.forEach((row, y) => {\n        row.forEach((cell, x) => {\n          if (cell && currentPiece.y + y >= 0) {\n            displayGrid[currentPiece.y + y][currentPiece.x + x] = currentPiece.color;\n          }\n        });\n      });\n    }\n    \n    return displayGrid;\n  };\n\n  const startGame = () => {\n    setGrid(Array(GRID_HEIGHT).fill().map(() => Array(GRID_WIDTH).fill(0)));\n    setCurrentPiece(getRandomPiece());\n    setScore(0);\n    setLines(0);\n    setLevel(1);\n    setGameOver(false);\n    setGameRunning(true);\n    setSpeed(INITIAL_SPEED);\n  };\n\n  const pauseGame = () => {\n    setGameRunning(!gameRunning);\n  };\n\n  const resetGame = () => {\n    setGameRunning(false);\n    setGameOver(false);\n    setGrid(Array(GRID_HEIGHT).fill().map(() => Array(GRID_WIDTH).fill(0)));\n    setCurrentPiece(null);\n    setScore(0);\n    setLines(0);\n    setLevel(1);\n    setSpeed(INITIAL_SPEED);\n  };\n\n  return (\n    <div className=\"flex flex-col items-center space-y-4 p-4\">\n      {/* Score */}\n      <div className=\"grid grid-cols-2 gap-4 w-full max-w-xs text-center\">\n        <div>\n          <div className=\"text-xl font-bold text-green-400\">{score}</div>\n          <div className=\"text-xs text-gray-400\">Score</div>\n        </div>\n        <div>\n          <div className=\"text-xl font-bold text-yellow-400 flex items-center justify-center\">\n            <Trophy size={16} className=\"mr-1\" />\n            {highScore}\n          </div>\n          <div className=\"text-xs text-gray-400\">Record</div>\n        </div>\n        <div>\n          <div className=\"text-xl font-bold text-blue-400\">{lines}</div>\n          <div className=\"text-xs text-gray-400\">Lignes</div>\n        </div>\n        <div>\n          <div className=\"text-xl font-bold text-purple-400\">{level}</div>\n          <div className=\"text-xs text-gray-400\">Niveau</div>\n        </div>\n      </div>\n\n      {/* Game Board */}\n      <div className=\"relative bg-gray-800 border border-gray-600 rounded-lg p-2\">\n        <div \n          className=\"grid gap-px bg-gray-700\"\n          style={{\n            gridTemplateColumns: `repeat(${GRID_WIDTH}, 15px)`,\n            gridTemplateRows: `repeat(${GRID_HEIGHT}, 15px)`\n          }}\n        >\n          {renderGrid().map((row, y) =>\n            row.map((cell, x) => (\n              <div\n                key={`${y}-${x}`}\n                className=\"w-4 h-4 border border-gray-600\"\n                style={{\n                  backgroundColor: cell || '#111'\n                }}\n              />\n            ))\n          )}\n        </div>\n        \n        {/* Game Over Overlay */}\n        {gameOver && (\n          <div className=\"absolute inset-0 bg-black/80 flex items-center justify-center rounded-lg\">\n            <div className=\"text-center space-y-2\">\n              <div className=\"text-2xl font-bold text-red-400\">Game Over</div>\n              <div className=\"text-lg text-white\">Score: {score}</div>\n              <div className=\"text-sm text-blue-400\">Lignes: {lines}</div>\n              {score === highScore && (\n                <div className=\"text-sm text-yellow-400\">🎉 Nouveau record !</div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Controls */}\n      <div className=\"flex space-x-2\">\n        {!gameRunning && !gameOver && (\n          <button\n            onClick={startGame}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-green-500 rounded-lg hover:bg-green-600 transition-colors\"\n          >\n            <Play size={16} className=\"text-white\" />\n            <span className=\"text-white text-sm\">Jouer</span>\n          </button>\n        )}\n        \n        {gameRunning && (\n          <button\n            onClick={pauseGame}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-yellow-500 rounded-lg hover:bg-yellow-600 transition-colors\"\n          >\n            <Pause size={16} className=\"text-white\" />\n            <span className=\"text-white text-sm\">Pause</span>\n          </button>\n        )}\n        \n        {gameOver && (\n          <button\n            onClick={startGame}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-blue-500 rounded-lg hover:bg-blue-600 transition-colors\"\n          >\n            <Play size={16} className=\"text-white\" />\n            <span className=\"text-white text-sm\">Rejouer</span>\n          </button>\n        )}\n        \n        <button\n          onClick={resetGame}\n          className=\"flex items-center space-x-2 px-4 py-2 bg-gray-600 rounded-lg hover:bg-gray-700 transition-colors\"\n        >\n          <RotateCcw size={16} className=\"text-white\" />\n          <span className=\"text-white text-sm\">Reset</span>\n        </button>\n        \n        {gameRunning && (\n          <button\n            onClick={rotatePieceHandler}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-purple-500 rounded-lg hover:bg-purple-600 transition-colors\"\n          >\n            <RotateCw size={16} className=\"text-white\" />\n            <span className=\"text-white text-sm\">Rotation</span>\n          </button>\n        )}\n      </div>\n\n      {/* Instructions */}\n      <div className=\"text-center text-gray-400 text-xs space-y-1\">\n        <p>↑ ou Espace: Rotation | ← →: Déplacer</p>\n        <p>↓: Descendre plus vite</p>\n      </div>\n    </div>\n  );\n};\n\nexport default TetrisGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}