{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/components/games/SnakeGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Play, Pause, RotateCcw, Trophy } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SnakeGame = ({\n  onScoreUpdate\n}) => {\n  _s();\n  const GRID_SIZE = 20;\n  const GRID_WIDTH = 15;\n  const GRID_HEIGHT = 20;\n  const [snake, setSnake] = useState([{\n    x: 7,\n    y: 10\n  }]);\n  const [food, setFood] = useState({\n    x: 10,\n    y: 10\n  });\n  const [direction, setDirection] = useState({\n    x: 1,\n    y: 0\n  });\n  const [gameRunning, setGameRunning] = useState(false);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [highScore, setHighScore] = useState(parseInt(localStorage.getItem('snake-high-score') || '0'));\n  const [speed, setSpeed] = useState(150);\n\n  // Generate random food position\n  const generateFood = useCallback(() => {\n    let newFood;\n    do {\n      newFood = {\n        x: Math.floor(Math.random() * GRID_WIDTH),\n        y: Math.floor(Math.random() * GRID_HEIGHT)\n      };\n    } while (snake.some(segment => segment.x === newFood.x && segment.y === newFood.y));\n    return newFood;\n  }, [snake]);\n\n  // Check collision\n  const checkCollision = useCallback(head => {\n    // Wall collision\n    if (head.x < 0 || head.x >= GRID_WIDTH || head.y < 0 || head.y >= GRID_HEIGHT) {\n      return true;\n    }\n    // Self collision\n    return snake.some(segment => segment.x === head.x && segment.y === head.y);\n  }, [snake]);\n\n  // Game loop\n  useEffect(() => {\n    if (!gameRunning || gameOver) return;\n    const gameLoop = setInterval(() => {\n      setSnake(prevSnake => {\n        const newSnake = [...prevSnake];\n        const head = {\n          ...newSnake[0]\n        };\n        head.x += direction.x;\n        head.y += direction.y;\n        if (checkCollision(head)) {\n          setGameOver(true);\n          setGameRunning(false);\n          return prevSnake;\n        }\n        newSnake.unshift(head);\n\n        // Check if food is eaten\n        if (head.x === food.x && head.y === food.y) {\n          const newScore = score + 10;\n          setScore(newScore);\n          setFood(generateFood());\n\n          // Increase speed every 50 points\n          if (newScore % 50 === 0) {\n            setSpeed(prevSpeed => Math.max(prevSpeed - 10, 80));\n          }\n        } else {\n          newSnake.pop();\n        }\n        return newSnake;\n      });\n    }, speed);\n    return () => clearInterval(gameLoop);\n  }, [gameRunning, direction, food, score, speed, gameOver]);\n\n  // Handle keyboard input\n  useEffect(() => {\n    const handleKeyPress = e => {\n      if (!gameRunning) return;\n      switch (e.key) {\n        case 'ArrowUp':\n          e.preventDefault();\n          setDirection(prev => prev.y === 0 ? {\n            x: 0,\n            y: -1\n          } : prev);\n          break;\n        case 'ArrowDown':\n          e.preventDefault();\n          setDirection(prev => prev.y === 0 ? {\n            x: 0,\n            y: 1\n          } : prev);\n          break;\n        case 'ArrowLeft':\n          e.preventDefault();\n          setDirection(prev => prev.x === 0 ? {\n            x: -1,\n            y: 0\n          } : prev);\n          break;\n        case 'ArrowRight':\n          e.preventDefault();\n          setDirection(prev => prev.x === 0 ? {\n            x: 1,\n            y: 0\n          } : prev);\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [gameRunning]);\n\n  // Update high score\n  useEffect(() => {\n    if (score > highScore) {\n      setHighScore(score);\n      localStorage.setItem('snake-high-score', score.toString());\n      onScoreUpdate === null || onScoreUpdate === void 0 ? void 0 : onScoreUpdate({\n        game: 'snake',\n        score,\n        isHighScore: true\n      });\n    }\n  }, [score, highScore, onScoreUpdate]);\n  const startGame = () => {\n    setSnake([{\n      x: 7,\n      y: 10\n    }]);\n    setFood(generateFood());\n    setDirection({\n      x: 1,\n      y: 0\n    });\n    setScore(0);\n    setGameOver(false);\n    setGameRunning(true);\n    setSpeed(150);\n  };\n  const pauseGame = () => {\n    setGameRunning(!gameRunning);\n  };\n  const resetGame = () => {\n    setGameRunning(false);\n    setGameOver(false);\n    setSnake([{\n      x: 7,\n      y: 10\n    }]);\n    setFood({\n      x: 10,\n      y: 10\n    });\n    setDirection({\n      x: 1,\n      y: 0\n    });\n    setScore(0);\n    setSpeed(150);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center space-y-4 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between w-full max-w-xs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-2xl font-bold text-green-400\",\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-400\",\n          children: \"Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-2xl font-bold text-yellow-400 flex items-center justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(Trophy, {\n            size: 20,\n            className: \"mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), highScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-400\",\n          children: \"Record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative bg-gray-800 border border-gray-600 rounded-lg p-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid gap-px bg-gray-700\",\n        style: {\n          gridTemplateColumns: `repeat(${GRID_WIDTH}, ${GRID_SIZE}px)`,\n          gridTemplateRows: `repeat(${GRID_HEIGHT}, ${GRID_SIZE}px)`\n        },\n        children: Array.from({\n          length: GRID_WIDTH * GRID_HEIGHT\n        }, (_, i) => {\n          const x = i % GRID_WIDTH;\n          const y = Math.floor(i / GRID_WIDTH);\n          const isSnake = snake.some(segment => segment.x === x && segment.y === y);\n          const isHead = snake[0] && snake[0].x === x && snake[0].y === y;\n          const isFood = food.x === x && food.y === y;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-5 h-5 ${isFood ? 'bg-red-500 rounded-full' : isHead ? 'bg-green-300 rounded-sm' : isSnake ? 'bg-green-500 rounded-sm' : 'bg-gray-900'}`\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 bg-black/80 flex items-center justify-center rounded-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-bold text-red-400\",\n            children: \"Game Over\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-lg text-white\",\n            children: [\"Score: \", score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), score === highScore && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-yellow-400\",\n            children: \"\\uD83C\\uDF89 Nouveau record !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-2\",\n      children: [!gameRunning && !gameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startGame,\n        className: \"flex items-center space-x-2 px-4 py-2 bg-green-500 rounded-lg hover:bg-green-600 transition-colors\",\n        children: [/*#__PURE__*/_jsxDEV(Play, {\n          size: 16,\n          className: \"text-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-white text-sm\",\n          children: \"Jouer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), gameRunning && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: pauseGame,\n        className: \"flex items-center space-x-2 px-4 py-2 bg-yellow-500 rounded-lg hover:bg-yellow-600 transition-colors\",\n        children: [/*#__PURE__*/_jsxDEV(Pause, {\n          size: 16,\n          className: \"text-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-white text-sm\",\n          children: \"Pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startGame,\n        className: \"flex items-center space-x-2 px-4 py-2 bg-blue-500 rounded-lg hover:bg-blue-600 transition-colors\",\n        children: [/*#__PURE__*/_jsxDEV(Play, {\n          size: 16,\n          className: \"text-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-white text-sm\",\n          children: \"Rejouer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        className: \"flex items-center space-x-2 px-4 py-2 bg-gray-600 rounded-lg hover:bg-gray-700 transition-colors\",\n        children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n          size: 16,\n          className: \"text-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-white text-sm\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-gray-400 text-xs space-y-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Utilisez les fl\\xE8ches pour diriger le serpent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Mangez la nourriture rouge pour grandir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(SnakeGame, \"QwI4O/7Q6qIItEyKLI5KAQV9zbk=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Play","Pause","RotateCcw","Trophy","jsxDEV","_jsxDEV","SnakeGame","onScoreUpdate","_s","GRID_SIZE","GRID_WIDTH","GRID_HEIGHT","snake","setSnake","x","y","food","setFood","direction","setDirection","gameRunning","setGameRunning","score","setScore","gameOver","setGameOver","highScore","setHighScore","parseInt","localStorage","getItem","speed","setSpeed","generateFood","newFood","Math","floor","random","some","segment","checkCollision","head","gameLoop","setInterval","prevSnake","newSnake","unshift","newScore","prevSpeed","max","pop","clearInterval","handleKeyPress","e","key","preventDefault","prev","window","addEventListener","removeEventListener","setItem","toString","game","isHighScore","startGame","pauseGame","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","size","style","gridTemplateColumns","gridTemplateRows","Array","from","length","_","i","isSnake","isHead","isFood","onClick","_c","$RefreshReg$"],"sources":["/app/frontend/src/components/games/SnakeGame.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Play, Pause, RotateCcw, Trophy } from 'lucide-react';\n\nconst SnakeGame = ({ onScoreUpdate }) => {\n  const GRID_SIZE = 20;\n  const GRID_WIDTH = 15;\n  const GRID_HEIGHT = 20;\n  \n  const [snake, setSnake] = useState([{ x: 7, y: 10 }]);\n  const [food, setFood] = useState({ x: 10, y: 10 });\n  const [direction, setDirection] = useState({ x: 1, y: 0 });\n  const [gameRunning, setGameRunning] = useState(false);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [highScore, setHighScore] = useState(\n    parseInt(localStorage.getItem('snake-high-score') || '0')\n  );\n  const [speed, setSpeed] = useState(150);\n\n  // Generate random food position\n  const generateFood = useCallback(() => {\n    let newFood;\n    do {\n      newFood = {\n        x: Math.floor(Math.random() * GRID_WIDTH),\n        y: Math.floor(Math.random() * GRID_HEIGHT)\n      };\n    } while (snake.some(segment => segment.x === newFood.x && segment.y === newFood.y));\n    return newFood;\n  }, [snake]);\n\n  // Check collision\n  const checkCollision = useCallback((head) => {\n    // Wall collision\n    if (head.x < 0 || head.x >= GRID_WIDTH || head.y < 0 || head.y >= GRID_HEIGHT) {\n      return true;\n    }\n    // Self collision\n    return snake.some(segment => segment.x === head.x && segment.y === head.y);\n  }, [snake]);\n\n  // Game loop\n  useEffect(() => {\n    if (!gameRunning || gameOver) return;\n\n    const gameLoop = setInterval(() => {\n      setSnake(prevSnake => {\n        const newSnake = [...prevSnake];\n        const head = { ...newSnake[0] };\n        \n        head.x += direction.x;\n        head.y += direction.y;\n        \n        if (checkCollision(head)) {\n          setGameOver(true);\n          setGameRunning(false);\n          return prevSnake;\n        }\n        \n        newSnake.unshift(head);\n        \n        // Check if food is eaten\n        if (head.x === food.x && head.y === food.y) {\n          const newScore = score + 10;\n          setScore(newScore);\n          setFood(generateFood());\n          \n          // Increase speed every 50 points\n          if (newScore % 50 === 0) {\n            setSpeed(prevSpeed => Math.max(prevSpeed - 10, 80));\n          }\n        } else {\n          newSnake.pop();\n        }\n        \n        return newSnake;\n      });\n    }, speed);\n\n    return () => clearInterval(gameLoop);\n  }, [gameRunning, direction, food, score, speed, gameOver]);\n\n  // Handle keyboard input\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      if (!gameRunning) return;\n      \n      switch (e.key) {\n        case 'ArrowUp':\n          e.preventDefault();\n          setDirection(prev => prev.y === 0 ? { x: 0, y: -1 } : prev);\n          break;\n        case 'ArrowDown':\n          e.preventDefault();\n          setDirection(prev => prev.y === 0 ? { x: 0, y: 1 } : prev);\n          break;\n        case 'ArrowLeft':\n          e.preventDefault();\n          setDirection(prev => prev.x === 0 ? { x: -1, y: 0 } : prev);\n          break;\n        case 'ArrowRight':\n          e.preventDefault();\n          setDirection(prev => prev.x === 0 ? { x: 1, y: 0 } : prev);\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [gameRunning]);\n\n  // Update high score\n  useEffect(() => {\n    if (score > highScore) {\n      setHighScore(score);\n      localStorage.setItem('snake-high-score', score.toString());\n      onScoreUpdate?.({ game: 'snake', score, isHighScore: true });\n    }\n  }, [score, highScore, onScoreUpdate]);\n\n  const startGame = () => {\n    setSnake([{ x: 7, y: 10 }]);\n    setFood(generateFood());\n    setDirection({ x: 1, y: 0 });\n    setScore(0);\n    setGameOver(false);\n    setGameRunning(true);\n    setSpeed(150);\n  };\n\n  const pauseGame = () => {\n    setGameRunning(!gameRunning);\n  };\n\n  const resetGame = () => {\n    setGameRunning(false);\n    setGameOver(false);\n    setSnake([{ x: 7, y: 10 }]);\n    setFood({ x: 10, y: 10 });\n    setDirection({ x: 1, y: 0 });\n    setScore(0);\n    setSpeed(150);\n  };\n\n  return (\n    <div className=\"flex flex-col items-center space-y-4 p-4\">\n      {/* Score */}\n      <div className=\"flex justify-between w-full max-w-xs\">\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-green-400\">{score}</div>\n          <div className=\"text-xs text-gray-400\">Score</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-yellow-400 flex items-center justify-center\">\n            <Trophy size={20} className=\"mr-1\" />\n            {highScore}\n          </div>\n          <div className=\"text-xs text-gray-400\">Record</div>\n        </div>\n      </div>\n\n      {/* Game Board */}\n      <div className=\"relative bg-gray-800 border border-gray-600 rounded-lg p-2\">\n        <div \n          className=\"grid gap-px bg-gray-700\"\n          style={{\n            gridTemplateColumns: `repeat(${GRID_WIDTH}, ${GRID_SIZE}px)`,\n            gridTemplateRows: `repeat(${GRID_HEIGHT}, ${GRID_SIZE}px)`\n          }}\n        >\n          {Array.from({ length: GRID_WIDTH * GRID_HEIGHT }, (_, i) => {\n            const x = i % GRID_WIDTH;\n            const y = Math.floor(i / GRID_WIDTH);\n            \n            const isSnake = snake.some(segment => segment.x === x && segment.y === y);\n            const isHead = snake[0] && snake[0].x === x && snake[0].y === y;\n            const isFood = food.x === x && food.y === y;\n            \n            return (\n              <div\n                key={i}\n                className={`w-5 h-5 ${\n                  isFood \n                    ? 'bg-red-500 rounded-full' \n                    : isHead \n                      ? 'bg-green-300 rounded-sm' \n                      : isSnake \n                        ? 'bg-green-500 rounded-sm' \n                        : 'bg-gray-900'\n                }`}\n              />\n            );\n          })}\n        </div>\n        \n        {/* Game Over Overlay */}\n        {gameOver && (\n          <div className=\"absolute inset-0 bg-black/80 flex items-center justify-center rounded-lg\">\n            <div className=\"text-center space-y-2\">\n              <div className=\"text-2xl font-bold text-red-400\">Game Over</div>\n              <div className=\"text-lg text-white\">Score: {score}</div>\n              {score === highScore && (\n                <div className=\"text-sm text-yellow-400\">🎉 Nouveau record !</div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Controls */}\n      <div className=\"flex space-x-2\">\n        {!gameRunning && !gameOver && (\n          <button\n            onClick={startGame}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-green-500 rounded-lg hover:bg-green-600 transition-colors\"\n          >\n            <Play size={16} className=\"text-white\" />\n            <span className=\"text-white text-sm\">Jouer</span>\n          </button>\n        )}\n        \n        {gameRunning && (\n          <button\n            onClick={pauseGame}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-yellow-500 rounded-lg hover:bg-yellow-600 transition-colors\"\n          >\n            <Pause size={16} className=\"text-white\" />\n            <span className=\"text-white text-sm\">Pause</span>\n          </button>\n        )}\n        \n        {gameOver && (\n          <button\n            onClick={startGame}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-blue-500 rounded-lg hover:bg-blue-600 transition-colors\"\n          >\n            <Play size={16} className=\"text-white\" />\n            <span className=\"text-white text-sm\">Rejouer</span>\n          </button>\n        )}\n        \n        <button\n          onClick={resetGame}\n          className=\"flex items-center space-x-2 px-4 py-2 bg-gray-600 rounded-lg hover:bg-gray-700 transition-colors\"\n        >\n          <RotateCcw size={16} className=\"text-white\" />\n          <span className=\"text-white text-sm\">Reset</span>\n        </button>\n      </div>\n\n      {/* Instructions */}\n      <div className=\"text-center text-gray-400 text-xs space-y-1\">\n        <p>Utilisez les flèches pour diriger le serpent</p>\n        <p>Mangez la nourriture rouge pour grandir</p>\n      </div>\n    </div>\n  );\n};\n\nexport default SnakeGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}